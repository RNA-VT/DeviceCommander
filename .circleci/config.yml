version: 2.1
parameters:
  device-commander-version:
    type: string
    default: "0.0.1"
orbs:
  docker: circleci/docker@2.1.2
executors:
  docker-publisher:
    docker:
      - image: cimg/base:2022.06
jobs:
  test:
    docker:
      - image: circleci/golang:1.16
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD
      - image: circleci/postgres:9.6-alpine
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: changeme
    parallelism: 1
    environment:
      TEST_RESULTS: /tmp/test-results
    steps:
      - checkout
      - run: mkdir -p $TEST_RESULTS
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Waiting for Postgres to be ready
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Install dependencies
          command: sudo apt-get update -y && sudo apt-get install libpcap-dev
      - run:
          name: Run DB migrations.
          command: go run main.go migrate-db
      - run:
          name: Run unit tests
          environment:
            POSTGRES_HOST: localhost
          # store the results of our tests in the $TEST_RESULTS directory
          command: |
            PACKAGE_NAMES=$(go list ./... | circleci tests split --split-by=timings --timings-type=classname)
            gotestsum --junitfile ${TEST_RESULTS}/gotestsum-report.xml -- $PACKAGE_NAMES      
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - store_artifacts: # upload test summary for display in Artifacts
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results: # upload test results for display in Test Summary
          path: /tmp/test-results

  build:
    docker:
      - image: circleci/golang:1.16
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: sudo apt-get update -y && sudo apt-get install libpcap-dev
      - run:
          name: Build go project
          command: ./scripts/build.sh
            
  lint:
    docker:
      - image: golangci/golangci-lint:v1.43-alpine
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apk add libpcap-dev
            go mod vendor
      - run:
          name: Lint
          command: golangci-lint run

workflows:
  version: 2
  devicecommander-build:
    jobs:
      - lint
      - test
      - build
      - docker/publish:
          name: build-and-publish
          image: rnavt/devicecommander
          context: docker_hub
          docker-context: .
          tag: ${CIRCLE_SHA1:0:7},$CIRCLE_BRANCH
          filters:
              branches:
                only:
                  # - master
