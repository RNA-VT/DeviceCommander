// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	parameter "github.com/rna-vt/devicecommander/src/device/parameter"
	mock "github.com/stretchr/testify/mock"
)

// ParameterRepository is an autogenerated mock type for the ParameterRepository type
type ParameterRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: _a0
func (_m *ParameterRepository) Create(_a0 parameter.NewParameterParams) (*parameter.Parameter, error) {
	ret := _m.Called(_a0)

	var r0 *parameter.Parameter
	if rf, ok := ret.Get(0).(func(parameter.NewParameterParams) *parameter.Parameter); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*parameter.Parameter)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(parameter.NewParameterParams) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Delete provides a mock function with given fields: _a0
func (_m *ParameterRepository) Delete(_a0 string) (*parameter.Parameter, error) {
	ret := _m.Called(_a0)

	var r0 *parameter.Parameter
	if rf, ok := ret.Get(0).(func(string) *parameter.Parameter); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*parameter.Parameter)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Get provides a mock function with given fields: _a0
func (_m *ParameterRepository) Get(_a0 parameter.Parameter) ([]*parameter.Parameter, error) {
	ret := _m.Called(_a0)

	var r0 []*parameter.Parameter
	if rf, ok := ret.Get(0).(func(parameter.Parameter) []*parameter.Parameter); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*parameter.Parameter)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(parameter.Parameter) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAll provides a mock function with given fields:
func (_m *ParameterRepository) GetAll() ([]*parameter.Parameter, error) {
	ret := _m.Called()

	var r0 []*parameter.Parameter
	if rf, ok := ret.Get(0).(func() []*parameter.Parameter); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*parameter.Parameter)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Update provides a mock function with given fields: _a0
func (_m *ParameterRepository) Update(_a0 parameter.UpdateParameterParams) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(parameter.UpdateParameterParams) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
